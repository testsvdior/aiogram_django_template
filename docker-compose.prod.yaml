version: "2.2"

services:

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - ${PUB_PORT}:80
    volumes:
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - django

  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend
    restart: always
    env_file:
      - ./.env
    environment:
      - IS_DOCKER=True
    volumes:
      - static_volume:/django/staticfiles
      - media_volume:/django/mediafiles
    depends_on:
      postgres:
        condition: service_healthy

  aiogram:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    container_name: telegram_bot
    restart: always # crash: not found token
    command: ["python", "main.py"]
    env_file:
      - ./.env
    environment:
      - IS_DOCKER=True
    depends_on:
      - django

  postgres:
    image: postgres:13.0-alpine
    container_name: project_db
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    depends_on:
      - redis
    ports:
      - 54321:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD","pg_isready", "--username=${POSTGRES_USER}","-d", "{POSTGRES_DB}"]

  redis:
    image: redis:7
    container_name: redis
    restart: always
#    env_file:
#      - ./.env
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis
      - redis_data:/data
    ports:
      - ${REDIS_PORT}:6379
#    command:
#     - redis-server /usr/local/etc/redis/redis.conf
#     - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    environment:
        - REDIS_PASSWORD=${REDIS_PASSWORD}


volumes:
  postgres_volume:
  static_volume:
  media_volume:
  redis_data:
